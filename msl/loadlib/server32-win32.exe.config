<?xml version ="1.0"?>
<!--
  Created by the MSL-LoadLib package.

  By default, applications that target the .NET Framework version 4.0+ cannot load assemblies from
  previous .NET Framework versions. You must add and modify the "app".config file and set the
  useLegacyV2RuntimeActivationPolicy property.

  See http://support.microsoft.com/kb/2572158 for an overview.

  For example, Python for .NET (pythonnet, http://pythonnet.github.io/) only works with .NET 4.0+
  and therefore it cannot automatically load a shared library that was compiled with .NET <4.0. If
  you try to load the library and a System.IO.FileNotFoundException is raised then that probably
  means that the library is from .NET <4.0.

  The System.IO.FileNotFoundException exception will also be raised if the folder that the DLL is
  located in is not within sys.path, so first make sure that the shared library is visible to the
  Python interpreter.

  NOTE: To install pythonnet, run:
  $ pip install pythonnet

  Example using SpelNetLib.dll, which is a .NET library for the EPSON RC+ 6-axis robot
  http://www.d.umn.edu/~rlindek1/ME4135_11/e_SPEL%2BRef54_r1.pdf

  >>> import clr
  >>> clr.AddReference("SpelNetLib")

  If calling AddReference raises the following exception

      System.IO.FileNotFoundException: Unable to find assembly 'SpelNetLib.dll'

  and you are certain that the path to the library is in sys.path, then you can use the following
  to obtain a more detailed description of the exception:

  >>> from clr import System
  >>> from System import Reflection
  >>> Reflection.Assembly.LoadFile('path/to/dll/SpelNetLib.dll')
-->
<configuration>
    <startup useLegacyV2RuntimeActivationPolicy="true">
        <supportedRuntime version="v4.0" />
        <supportedRuntime version="v2.0.50727" />
    </startup>
</configuration>
